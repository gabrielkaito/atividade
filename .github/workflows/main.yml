name: Publica칞칚o autom치tica
on:  
  # nosso script ser치 executado sempre quando houver push e pull request nas branches destacadas abaixo
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    # sistema operacional da m치quina que o Github ir치 disponibilizar para rodar o nosso script 
    runs-on: ubuntu-latest

    # aqui 칠 iniciado o passo a passo para realizar o processo de publica칞칚o
    steps:
      - uses: actions/checkout@v3

      - name: Cria um arquivo tempor치rio para a chave privada e altera a permiss칚o do arquivo para que s칩 o dono possa ler e escrever (necess치rio para chaves)
        run: |
               echo "${{ secrets.KEY }}" > /tmp/private_key
               chmod 600 /tmp/private_key

      - name: Criando a pasta da aplica칞칚o e acertando diret칩rio... 
        # StrictHostKeyChecking: desativar prompt 'fingerprint'
        # UserKnownHostsFile: para n칚o salvar a chave
        run: |
               ssh -i /tmp/private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@${{ secrets.HOST }} \
               sudo mkdir -p /home/ubuntu/dev

      - name: Ajustar permiss칫es no servidor de Produ칞칚o
        run: |
          ssh -i /tmp/private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@${{ secrets.HOST }} "sudo chown -R ubuntu:ubuntu /home/ubuntu/dev && sudo chmod -R 755 /home/ubuntu/dev"

      - name: 游대 Backup da aplica칞칚o atual antes do deploy
        run: |
          ssh -i /tmp/private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@${{ secrets.HOST }} '
            set -e
            BACKUP_DIR="/home/ubuntu/backups"
            APP_DIR="/home/ubuntu/dev"
            TIMESTAMP=$(date +%Y%m%d-%H%M%S)
            BACKUP_FILE="$BACKUP_DIR/app-backup-$TIMESTAMP.zip"
            mkdir -p "$BACKUP_DIR"
            if [ "$(ls -A $APP_DIR)" ]; then
              zip -r "$BACKUP_FILE" "$APP_DIR"
              echo "Backup criado em: $BACKUP_FILE"
            else
              echo "Diret칩rio da aplica칞칚o est치 vazio, nenhum backup necess치rio."
            fi
          '
                     
      - name: 游닍 Transferindo os arquivos da aplica칞칚o
        run: |
               scp -i /tmp/private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r ${{ github.workspace }}/* ubuntu@${{ secrets.HOST }}:/home/ubuntu/dev


      - name: 游댃 Reiniciando o servi칞o da aplica칞칚o
        run: |
               ssh -i /tmp/private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@${{ secrets.HOST }} \
               sudo systemctl restart app.service              

      - name: 游빛 Limpa o arquivo de chave privada ap칩s uso
        run: |
           rm /tmp/private_key

      - name: 游닉 Enviar mensagem para o Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          AUTHOR: ${{ github.actor }}
        run: |
          curl -H "Content-Type: application/json" \
                 -X POST \
                 -d "{\"content\": \"Deploy realizado com sucesso por **${AUTHOR}**!\"}" \
                 $DISCORD_WEBHOOK      
